name: Continuous Integration/Deployment

on:
  push:
    branches:
      - workflow-ci-cd  # Cambiar por la rama que desees

jobs:
  ci_cd:
    runs-on: ubuntu-latest
    
    env:
      REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }}
      REGION: ${{ secrets.REGION }}
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      GCP_SA_KEY_4_0: ${{ secrets.GCP_SA_KEY_4_0 }}
      IMAGE_NAME: "deploy-net-4-0"  # Cambiar por el nombre de la imagen Docker
      SERVICE_NAME: "net-deployed-4-0"  # Cambiar por el nombre del servicio en Cloud R
    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      
      - name: Debug Environment Variables
        run: |
          echo "Registry Name: $REGISTRY_NAME"
          echo "Region: $REGION"
          echo "Project ID: $PROJECT_ID"
          echo "Service Account Key: $GCP_SA_KEY_4_0"

      - name: Set up Python environment
        run: |
          pip3 install virtualenv
          virtualenv venv
          source venv/bin/activate
          pip install dvc[gs]
          echo $GCP_SA_KEY_4_0 > /tmp/key.json
          export GOOGLE_APPLICATION_CREDENTIALS="/tmp/key.json"

      - name: Set up GCLOUD SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY_4_0 }}
          project_id: ${{ secrets.PROJECT_ID }}
          export_default_credentials: true

      - name: Build Docker image
        run: |
          gcloud auth configure-docker ${REGISTRY_NAME} --quiet
          docker build -t ${REGISTRY_NAME}/${IMAGE_NAME} .
          docker push ${REGISTRY_NAME}/${IMAGE_NAME}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE_NAME }}
          image: ${REGISTRY_NAME}/${IMAGE_NAME}
          region: ${REGION}
          project_id: ${{ secrets.PROJECT_ID }}
          credentials: ${{ secrets.GCP_SA_KEY_4_0 }}
